//
//  HomePresenter.swift
//  CleanSwift
//
//  Created by Johnny Sousa on 26/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePresentationLogic {
    func presentSomething(response: Home.Fetch.Response)
    func presentSelectCode(response: Home.SelectHttp.Response)
}

class HomePresenter: HomePresentationLogic {
    
    weak var viewController: HomeDisplayLogic?
    
    // MARK: Do something
    func presentSomething(response: Home.Fetch.Response) {
        var displayedHttps: [Home.Fetch.ViewModel.DiplayedHttp] = []
        
        for statusCode in response.httpStatusCodes {
            let responseType = getResponseType(statusCode.responseType)
            
            if let index = displayedHttps.firstIndex(where: { $0.responseType == responseType }) {
                displayedHttps[index].statusCodes.append(statusCode)
            } else {
                let displayedHttp = Home.Fetch.ViewModel.DiplayedHttp(responseType: responseType, statusCodes: [statusCode])
                
                displayedHttps.append(displayedHttp)
            }
        }
        
        let viewModel = Home.Fetch.ViewModel(displayedHttps: displayedHttps)
        
        viewController?.displaySomething(viewModel: viewModel)
    }
    
    func presentSelectCode(response: Home.SelectHttp.Response) {
        let viewModel = Home.SelectHttp.ViewModel()
        
        viewController?.displaySelectHttp(viewModel: viewModel)
    }
    
    private func getResponseType(_ responseType: HTTPStatusCode.ResponseType) -> String {
        switch responseType {
        case .informational:
            return "Informational"
        case .success:
            return "Success"
        case .clientError:
            return "Client Error"
        case .redirection:
            return "Redirection"
        case .serverError:
            return "Server Error"
        case .undefined:
            return "Undefined"
        }
    }
}
