//
//  HTTPPresenter.swift
//  CleanSwift
//
//  Created by Johnny Sousa on 30/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HTTPDogPresentationLogic {
    func presentResponse(response: HTTPDog.Response)
}

class HTTPDogPresenter {
    
    weak var viewController: HTTPDogDisplayLogic?
    
}

// MARK: - HTTPDogPresentationLogic
extension HTTPDogPresenter: HTTPDogPresentationLogic {
    
    func presentResponse(response: HTTPDog.Response) {
        switch response {
        case .dataHttpDogItem(let item):
            let url = URL(string: item.urlImage.jpg)!
            let urlRequest = URLRequest(url: url)
            
            URLSession.shared.loadData(with: urlRequest) { data, response, error in
                if let _ = error {
                    return
                }
                guard let response = response as? HTTPURLResponse, response.statusCode == 200 else {
                    return
                }
                guard let data = data else {
                    return
                }
                
                DispatchQueue.main.async { [weak self] in
                    let item = HTTPDogItemView(dataImage: data)
                    
                    let viewModel = HTTPDog.ViewModel.httpDogItem(item: item)
                    
                    self?.viewController?.displayViewModel(viewModel: viewModel)
                }
            }
        }
    }
}
