//
//  HTTPPresenter.swift
//  CleanSwift
//
//  Created by Johnny Sousa on 30/05/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HTTPDogPresentationLogic {
    func presentResponse(response: HTTPDog.Response)
}

class HTTPDogPresenter {
    
    weak var viewController: HTTPDogDisplayLogic?
    
}

// MARK: - HTTPDogPresentationLogic
extension HTTPDogPresenter: HTTPDogPresentationLogic {
    
    func presentResponse(response: HTTPDog.Response) {
        switch response {
        case .dataHttpDogItem(let item):
            displayHttpDogItem(item)
        case .errorFetchHttpDogItem(let error):
            displayErrorFetchHttpDogItem(error)
        }
    }
}

// MARK: - Private functions
extension HTTPDogPresenter {
    
    private func displayHttpDogItem(_ item: HTTPDogItemProtocol) {
        let viewModel = HTTPDog.ViewModel.httpDogItem(item: item)
        
        self.viewController?.displayViewModel(viewModel: viewModel)
    }
    
    private func displayErrorFetchHttpDogItem(_ error: Error) {
        let viewModel = HTTPDog.ViewModel.errorFetchHttpDogItem(message: error.localizedDescription)
        
        viewController?.displayViewModel(viewModel: viewModel)
    }
}
